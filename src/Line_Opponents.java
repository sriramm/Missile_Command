
import java.util.Random; //imports the package that contains code to generate random values as integers, doubles, etc.

public class Line_Opponents { //the object class that controls the line opponents that appear and fly down
	//from the sky
        private double x_coor;//coordinate that controls the x-coordinate of the line missile as it is moving
        private double y_coor;//coordinate that controls the y-coordinate of the line missile as it is moving
        private double startXCoor;//coordinate that controls the starting x-coordinate of the line missile
        private double startYCoor;//coordinate that controls the starting y-coordinate of the line missile
        private int level;//the value that controls the level at which the line opponents are spawned
        private double ySpeedRandom;//the variable that controls the randomly generated starting y-speeds
        private double ySpeedRandomChanger;//the variable that controls the rate at which the y-variable changes (movement in the 'y')

        public Line_Opponents(double x_coor, double y_coor, double startXCoor, double startYCoor, int level){ //constructor for the line
        	//missiles class that takes in certain parameters to create a new instance of this object
        	
        	/*
        	 * sets the input parameters to the values found in this class and modified by the programmer
        	 * and player
        	 */
                this.x_coor=x_coor;
                this.y_coor=y_coor;
                this.startXCoor=startXCoor;
                this.startYCoor=startYCoor;
                this.level=level;
                Random ySpeed=new Random();//new random generator that generates double values for the 
                //use of the y-speed variable, adjusting the y-speed of the newly spawned line missiles
                ySpeedRandom=ySpeed.nextDouble();//sets the variable to values generated by the random 
                //generator
                ySpeedRandomChanger=ySpeed.nextDouble();
        }
        
        public void moveObjectHor(double x){ //method that moves the line missile horizontally
                x_coor+=x;
        }
        
        public void moveObjectHorBack(double x){//method that moves the line missile horizontally backwards
                x_coor-=x;
        }

        public void moveObjectVer(double y){ //method that moves the line missiles vertically
        	
        	//the speeds of the line missiles are adjusted according the level by a calculation that takes 
        	//into account the speed random changer and the speed changer.
        	//The speeds are manipulated using a multiplier constant that is unique to each level.
        	if(level==1){
                y_coor+=y+(ySpeedRandom-ySpeedRandomChanger);
        	}
        	else if (level==2){
        		y_coor+=(y*1.1)+(ySpeedRandom-ySpeedRandomChanger);
        	}
        	else if (level==3){
        		y_coor+=(y*1.25)+(ySpeedRandom-ySpeedRandomChanger);
        	}
        	else if (level==4){
        		y_coor+=(y*1.4)+(ySpeedRandom-ySpeedRandomChanger);
        	}
        	else if (level==5){
        		y_coor+=(y*1.55)+(ySpeedRandom-ySpeedRandomChanger);
        	}
        }
        
        public void moveObjectVerBack(double y){ //method that moves the line missiles vertically backwards
                y_coor-=y;
        }
        
        public void resetLineY(){//method that resets the y-position of the line missile
                y_coor=0;
        }
        
        
        public void moveStartX(){//method that moves the starting x-value of the line missile
                startXCoor+=30;
        }
        
        public void resetStartX(){ //resets the starting x-value of the line missile to 0
                startXCoor=0;
        }
        
        public void setStartX(double x){//sets the starting x-coordinate of the line missile to the user
        	//input value
                startXCoor=x;
        }

        public void moveStartY(){//moves the starting y-coordinate by 5 each time this method is called
                startYCoor+=5;
        }
        
        public void resetStartY(){//resets the starting y-coordinates of the line missile to 0
                startYCoor=0;
        }

        public double getXCoor(){ //returns the x-coordinate of the line missile
                return this.x_coor;
        }
        
        public void setXCoor(double x){//sets the x-coordinate of the line missile
                x_coor=x;
        }

        public double getYCoor(){//returns the y-coordinate of the line missile
                return this.y_coor;
        }
        
        public double getStartXCoor(){//returns the starting x-coordinate of the line missiles
                return this.startXCoor;
        }
        
        public double getStartYCoor(){//returns the starting y-coordinate of the line missiles
                return this.startYCoor;
        }
}
